package com.nifemi.farmcollector.controller;

import com.nifemi.farmcollector.dto.FarmDetailsDTO;
import com.nifemi.farmcollector.service.FarmService;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/farms")
public class FarmController {

    private final FarmService farmService;

    public FarmController(FarmService farmService) {
        this.farmService = farmService;
    }

    @PostMapping
    public ResponseEntity<FarmDetailsDTO> createFarm(@RequestBody FarmDetailsDTO farmDetailsDTO) {
        FarmDetailsDTO createdFarm = farmService.createFarm(farmDetailsDTO);
        return new ResponseEntity<>(createdFarm, HttpStatus.CREATED);
    }

    @GetMapping
    public ResponseEntity<List<FarmDetailsDTO>> getAllFarms() {
        List<FarmDetailsDTO> farms = farmService.getAllFarms();
        return ResponseEntity.ok(farms);
    }

    @GetMapping("/{id}")
    public ResponseEntity<FarmDetailsDTO> getFarmById(@PathVariable Long id) {
        FarmDetailsDTO farm = farmService.getFarmById(id);
        return ResponseEntity.ok(farm);
    }

    @PutMapping("/{id}")
    public ResponseEntity<FarmDetailsDTO> updateFarm(@PathVariable Long id, @RequestBody FarmDetailsDTO farmDetailsDTO) {
        FarmDetailsDTO updatedFarm = farmService.updateFarm(id, farmDetailsDTO);
        return ResponseEntity.ok(updatedFarm);
    }

    @DeleteMapping("/{id}")
    public ResponseEntity<Void> deleteFarm(@PathVariable Long id) {
        farmService.deleteFarm(id);
        return ResponseEntity.noContent().build();
    }
}